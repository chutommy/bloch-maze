from maze import Maze, str_to_array
from state import State


class Level:
    """Represents an instance of a game level."""

    def __init__(self, title, subtitle, start_state, end_state, maze):
        self.title = title
        self.subtitle = subtitle
        self.maze = maze
        self.start_state = start_state
        self.end_state = end_state


def validate_level(level, dimensions):
    if not level.title or not level.subtitle \
            or not level.start_state or not level.end_state \
            or level.maze.grid.shape != dimensions:
        raise ValueError('invalid level')


def get_levels():
    """Retrieves the list of all levels."""
    dimensions = levels[0].maze.grid.shape
    for level in levels:
        validate_level(level, dimensions)
    return levels, dimensions


levels = [
    Level('level 0', "warm-up", State.ZERO, State.PLUS, Maze(str_to_array("""
    ...................
    ....wwwwwwwwww.....
    ....wA.......w.....
    ....w..X.Y.Z.w.....
    ....w........w.....
    ....w..H.S...w.....
    ....w..0.1...w.....
    ....w.......Bw.....
    ....wwwwwwwwww.....
    ...................
    """))),
    Level('level 1', "warm-up", State.ZERO, State.PLUS, Maze(str_to_array("""
    ...................
    ...................
    ...................
    ....wwwwwwwwww.....
    ....wA...H..Bw.....
    ....wwwwwwwwww.....
    ...................
    ...................
    ...................
    ...................
    """))),
    Level('level 2', "don't push it", State.ZERO, State.ZERO, Maze(str_to_array("""
    ...................
    ...................
    ...................
    ....wwwwwwwwww.....
    ....wA...H..Bw.....
    ....wwww.www.w.....
    .......w.w.w.w.....
    .......w.www.w.....
    .......w.....w.....
    .......wwwwwww.....
    """))),
]
